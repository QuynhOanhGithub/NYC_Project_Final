{
    "name": "AggregateFlow",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "nycpayroll2021",
                        "type": "DatasetReference"
                    },
                    "name": "source1"
                },
                {
                    "dataset": {
                        "referenceName": "historycal_data",
                        "type": "DatasetReference"
                    },
                    "name": "source2"
                }
            ],
            "sinks": [
                {
                    "linkedService": {
                        "referenceName": "AzureSynapseAnalytics_udacity",
                        "type": "LinkedServiceReference"
                    },
                    "name": "sink1",
                    "rejectedDataLinkedService": {
                        "referenceName": "AzureDataLakeStorage_udacity",
                        "type": "LinkedServiceReference"
                    }
                }
            ],
            "transformations": [
                {
                    "name": "union1"
                },
                {
                    "name": "filter1"
                },
                {
                    "name": "TotalPaid"
                },
                {
                    "name": "aggregate1"
                }
            ],
            "scriptLines": [
                "parameters{",
                "     dataflow_param_fiscalyear as integer (2020)",
                "}",
                "source(output(",
                "          FiscalYear as integer,",
                "          PayrollNumber as integer,",
                "          AgencyCode as string,",
                "          AgencyName as string,",
                "          EmployeeID as string,",
                "          LastName as string,",
                "          FirstName as string,",
                "          AgencyStartDate as string,",
                "          WorkLocationBorough as string,",
                "          TitleCode as string,",
                "          TitleDescription as string,",
                "          LeaveStatusasofJune30 as string,",
                "          BaseSalary as float,",
                "          PayBasis as string,",
                "          RegularHours as float,",
                "          RegularGrossPaid as float,",
                "          OTHours as float,",
                "          TotalOTPaid as float,",
                "          TotalOtherPay as float",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: true,",
                "     ignoreNoFilesFound: false) ~> source1",
                "source(output(",
                "          FiscalYear as integer,",
                "          PayrollNumber as integer,",
                "          AgencyID as string,",
                "          AgencyName as string,",
                "          EmployeeID as string,",
                "          LastName as string,",
                "          FirstName as string,",
                "          AgencyStartDate as string,",
                "          WorkLocationBorough as string,",
                "          TitleCode as string,",
                "          TitleDescription as string,",
                "          LeaveStatusasofJune30 as string,",
                "          BaseSalary as float,",
                "          PayBasis as string,",
                "          RegularHours as float,",
                "          RegularGrossPaid as float,",
                "          OTHours as float,",
                "          TotalOTPaid as float,",
                "          TotalOtherPay as float",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: true,",
                "     ignoreNoFilesFound: false) ~> source2",
                "source1, source2 union(byName: true)~> union1",
                "union1 filter(toInteger(FiscalYear) >= $dataflow_param_fiscalyear) ~> filter1",
                "filter1 derive(TotalPaid = RegularGrossPaid + TotalOTPaid+TotalOtherPay) ~> TotalPaid",
                "TotalPaid aggregate(groupBy(AgencyName,",
                "          FiscalYear),",
                "     TotalPaid = sum(TotalPaid)) ~> aggregate1",
                "aggregate1 sink(allowSchemaDrift: true,",
                "     validateSchema: true,",
                "     format: 'table',",
                "     store: 'synapseanalytics',",
                "     schemaName: 'dbo',",
                "     tableName: 'NYC_Summary',",
                "     insertable: true,",
                "     updateable: false,",
                "     deletable: false,",
                "     upsertable: false,",
                "     recreate: true,",
                "     allowCopyCommand: true,",
                "     staged: true,",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     saveOrder: 1,",
                "     errorHandlingOption: 'stopOnFirstError') ~> sink1"
            ]
        }
    }
}